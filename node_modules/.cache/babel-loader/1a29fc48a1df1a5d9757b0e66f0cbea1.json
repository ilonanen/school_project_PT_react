{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ilona\\\\Documents\\\\React\\\\ptreact\\\\src\\\\components\\\\Calendar.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport moment from 'moment';\n\nfunction Calendar() {\n  _s();\n\n  const [trainings, setTrainings] = useState([]);\n  useEffect(() => {\n    getTrainings();\n  }, []);\n  /*     const getTrainings = () => {\r\n          fetch('https://customerrest.herokuapp.com/gettrainings')\r\n          .then (response => response.json())\r\n          .then(data => setTrainings(data))\r\n          .catch(err => console.error(err))\r\n      } */\n\n  const events = {\n    url: 'https://customerrest.herokuapp.com/gettrainings',\n    method: 'GET',\n    color: 'yellow',\n    // a non-ajax option\n    textColor: 'black' // a non-ajax option\n\n  };\n  return /*#__PURE__*/_jsxDEV(FullCalendar, {\n    plugins: [dayGridPlugin, timeGridPlugin],\n    headerToolbar: {\n      left: 'prev,next today',\n      center: 'title',\n      right: 'dayGridMonth,timeGridWeek,timeGridDay'\n    },\n    initialView: \"dayGridMonth\",\n    initialEvents: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Calendar, \"uabLU8KjmDYF8yoFx+QKK9rR174=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["C:/Users/ilona/Documents/React/ptreact/src/components/Calendar.js"],"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","timeGridPlugin","moment","Calendar","trainings","setTrainings","getTrainings","events","url","method","color","textColor","left","center","right"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AAEA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT;AAIJ;AACA;AACA;AACA;AACA;AACA;;AAEI,QAAMC,MAAM,GACR;AACEC,IAAAA,GAAG,EAAE,iDADP;AAEEC,IAAAA,MAAM,EAAE,KAFV;AAGEC,IAAAA,KAAK,EAAE,QAHT;AAGqB;AACnBC,IAAAA,SAAS,EAAE,OAJb,CAIqB;;AAJrB,GADJ;AASA,sBACE,QAAC,YAAD;AACE,IAAA,OAAO,EAAE,CAACX,aAAD,EAAgBC,cAAhB,CADX;AAEE,IAAA,aAAa,EAAE;AACXW,MAAAA,IAAI,EAAE,iBADK;AAEXC,MAAAA,MAAM,EAAE,OAFG;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAFjB;AAOM,IAAA,WAAW,EAAG,cAPpB;AAQM,IAAA,aAAa,EACTP;AATV;AAAA;AAAA;AAAA;AAAA,UADF;AAcH;;GArCQJ,Q;;KAAAA,Q;AAuCT,eAAeA,QAAf","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\n\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\n\r\nimport moment from 'moment'\r\n\r\nfunction Calendar() {\r\n    const [trainings, setTrainings] = useState([])\r\n\r\n    useEffect(() => {\r\n        getTrainings()        \r\n    }, [])\r\n\r\n/*     const getTrainings = () => {\r\n        fetch('https://customerrest.herokuapp.com/gettrainings')\r\n        .then (response => response.json())\r\n        .then(data => setTrainings(data))\r\n        .catch(err => console.error(err))\r\n    } */\r\n\r\n    const events = \r\n        {\r\n          url: 'https://customerrest.herokuapp.com/gettrainings',\r\n          method: 'GET',\r\n          color: 'yellow',   // a non-ajax option\r\n          textColor: 'black' // a non-ajax option\r\n        }\r\n\r\n\r\n    return (\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin, timeGridPlugin]}\r\n        headerToolbar={{\r\n            left: 'prev,next today',\r\n            center: 'title',\r\n            right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n        }}\r\n            initialView = \"dayGridMonth\"\r\n            initialEvents = {\r\n                events\r\n            }\r\n      />\r\n    )\r\n}\r\n\r\nexport default Calendar"]},"metadata":{},"sourceType":"module"}