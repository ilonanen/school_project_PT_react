{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ilona\\\\Documents\\\\React\\\\ptreact\\\\src\\\\components\\\\Calendar.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport moment from 'moment';\nimport { Popover } from '@material-ui/core';\n\nfunction Calendar() {\n  _s();\n\n  const [trainings, setTrainings] = useState([]); // const [events, setEvents] = useState([])\n\n  useEffect(() => {\n    getTrainings();\n  }, []);\n\n  const getTrainings = () => {\n    fetch('https://customerrest.herokuapp.com/gettrainings').then(response => response.json()).then(data => setTrainings(data)).catch(err => console.error(err));\n  };\n\n  const events = trainings.map(training => {\n    return {\n      title: training.activity + ', ' + training.customer.firstname + ' ' + training.customer.lastname,\n      start: training.date,\n      end: moment(training.date).add(training.duration, 'm')\n    };\n  });\n  /* const handleEventClick = (info => {\r\n      <Tooltip title = {moment(info.event.start).format('DD.MM.YYYY HH.mm') + ' ' + info.event.title}> event</Tooltip>\r\n  }) */\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [popContent, setPopContent] = React.useState('');\n\n  const handleEventClick = event => {\n    setAnchorEl(event.currentTarget);\n    console.log(event);\n    setPopContent(event.event._def.title);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      headerToolbar: {\n        left: 'prev,next today',\n        center: 'title',\n        right: 'dayGridMonth,timeGridWeek,timeGridDay'\n      },\n      initialView: \"dayGridMonth\",\n      events: events,\n      eventTimeFormat: {\n        hour: '2-digit',\n        minute: '2-digit',\n        meridiem: false,\n        hour12: false\n      },\n      eventClick: handleEventClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      open: open,\n      anchorEl: anchorEl,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      children: popContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Calendar, \"RidwlWHJZLSj46fRqTAXk3lTcv4=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["C:/Users/ilona/Documents/React/ptreact/src/components/Calendar.js"],"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","moment","Popover","Calendar","trainings","setTrainings","getTrainings","fetch","then","response","json","data","catch","err","console","error","events","map","training","title","activity","customer","firstname","lastname","start","date","end","add","duration","anchorEl","setAnchorEl","popContent","setPopContent","handleEventClick","event","currentTarget","log","_def","handleClose","open","Boolean","id","undefined","left","center","right","hour","minute","meridiem","hour12","vertical","horizontal"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\n\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\n\r\nimport moment from 'moment'\r\nimport { Popover } from '@material-ui/core'\r\n\r\n\r\nfunction Calendar() {\r\n    const [trainings, setTrainings] = useState([])\r\n    // const [events, setEvents] = useState([])\r\n    \r\n    useEffect(() => {\r\n        getTrainings()        \r\n    }, [])\r\n    \r\n    const getTrainings = () => {\r\n        fetch('https://customerrest.herokuapp.com/gettrainings')\r\n        .then (response => response.json())\r\n        .then(data => setTrainings(data))\r\n        .catch(err => console.error(err))\r\n    }\r\n    \r\n    const events = trainings.map(training => {\r\n            return {\r\n                title: training.activity + ', ' + training.customer.firstname + ' ' + training.customer.lastname,\r\n                start: training.date,\r\n                end: moment(training.date).add(training.duration, 'm')\r\n            }\r\n        })\r\n\r\n    /* const handleEventClick = (info => {\r\n        <Tooltip title = {moment(info.event.start).format('DD.MM.YYYY HH.mm') + ' ' + info.event.title}> event</Tooltip>\r\n    }) */\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null)\r\n    const [popContent, setPopContent] = React.useState('')\r\n\r\n    const handleEventClick = (event) => {\r\n      setAnchorEl(event.currentTarget)\r\n      console.log(event)\r\n      setPopContent(event.event._def.title)\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null)\r\n    };\r\n  \r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    return (\r\n        <div>\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n        headerToolbar={{\r\n            left: 'prev,next today',\r\n            center: 'title',\r\n            right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n        }}\r\n        initialView = \"dayGridMonth\"\r\n        events = {events}\r\n        eventTimeFormat = {{\r\n            hour: '2-digit',\r\n            minute: '2-digit',\r\n            meridiem: false,\r\n            hour12: false\r\n        }}\r\n        eventClick = {handleEventClick}\r\n        />\r\n\r\n        <Popover\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={handleClose}\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n            }}\r\n        >\r\n            {popContent}\r\n        </Popover>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calendar"]},"metadata":{},"sourceType":"module"}