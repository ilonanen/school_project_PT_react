{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ilona\\\\Documents\\\\React\\\\ptreact\\\\src\\\\components\\\\customers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport DirectionsRunOutlinedIcon from '@material-ui/icons/DirectionsRunOutlined'; // for show trainings\n\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\nimport AddCustomer from './AddCustomer';\nimport AddTraining from './AddTraining';\n\nfunction Customers() {\n  _s();\n\n  const [customers, setCustomers] = useState([]);\n  useEffect(() => {\n    getCustomers();\n  }, []);\n\n  const getCustomers = () => {\n    fetch('https://customerrest.herokuapp.com/api/customers').then(response => response.json()).then(data => setCustomers(data.content)).catch(err => console.error(err));\n  };\n\n  const deleteCustomer = params => {\n    if (window.confirm('Delete customer and all their trainings?')) {\n      fetch(params.value[0].href, {\n        method: 'DELETE'\n      }).then(_ => fetch(params.value[2].href, {\n        method: 'DELETE'\n      })).then(_ => getCustomers()).catch(err => console.error(err));\n    }\n  };\n\n  const addCustomer = newCustomer => {\n    fetch('https://customerrest.herokuapp.com/api/customers', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(newCustomer)\n    }).then(response => getCustomers()).catch(err => console.error(err));\n  };\n\n  const columns = [{\n    headerName: 'Last name',\n    field: 'lastname',\n    sortable: true,\n    filter: true,\n    suppressSizeToFit: true\n  }, {\n    headerName: 'First Name',\n    field: 'firstname',\n    sortable: true,\n    filter: true,\n    suppressSizeToFit: true\n  }, {\n    headerName: 'Address',\n    field: 'streetaddress',\n    sortable: true,\n    filter: true,\n    suppressSizeToFit: true\n  }, {\n    field: 'postcode',\n    sortable: true,\n    filter: true,\n    suppressSizeToFit: true\n  }, {\n    field: 'city',\n    sortable: true,\n    filter: true,\n    suppressSizeToFit: true\n  }, {\n    field: 'email',\n    sortable: true,\n    filter: true,\n    suppressSizeToFit: true\n  }, {\n    field: 'phone',\n    sortable: true,\n    filter: true,\n    suppressSizeToFit: true\n  }, {\n    headerName: '',\n    field: 'links',\n    width: 80,\n    suppressSizeToFit: true,\n    cellRendererFramework: params => /*#__PURE__*/_jsxDEV(IconButton, {\n      color: \"secondary\",\n      onClick: () => deleteCustomer(params),\n      children: /*#__PURE__*/_jsxDEV(DeleteOutlinedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)\n  }, {\n    headerName: '',\n    field: 'data',\n    width: 80,\n    suppressSizeToFit: true,\n    cellRendererFramework: params => /*#__PURE__*/_jsxDEV(AddTraining, {\n      addTraining: addTraining,\n      params: params\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 46\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Customers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddCustomer, {\n      addCustomer: addCustomer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ag-theme-material\",\n      style: {\n        height: 600,\n        width: '100%',\n        margin: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n        rowData: customers,\n        columnDefs: columns,\n        pagination: \"true\",\n        paginationPageSize: \"10\",\n        resizable: \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Customers, \"h68b3hq6gv818inqQQjo1WvNv/E=\");\n\n_c = Customers;\nexport default Customers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Customers\");","map":{"version":3,"sources":["C:/Users/ilona/Documents/React/ptreact/src/components/customers.js"],"names":["React","useState","useEffect","IconButton","DeleteOutlinedIcon","EditOutlinedIcon","DirectionsRunOutlinedIcon","AgGridReact","AddCustomer","AddTraining","Customers","customers","setCustomers","getCustomers","fetch","then","response","json","data","content","catch","err","console","error","deleteCustomer","params","window","confirm","value","href","method","_","addCustomer","newCustomer","headers","body","JSON","stringify","columns","headerName","field","sortable","filter","suppressSizeToFit","width","cellRendererFramework","addTraining","height","margin"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,yBAAP,MAAsC,0CAAtC,C,CAAiF;;AAEjF,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAO,2CAAP;AACA,OAAO,qDAAP;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAGA,SAASC,SAAT,GAAqB;AAAA;;AACjB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,YAAY,GAAG,MAAM;AACvBC,IAAAA,KAAK,CAAC,kDAAD,CAAL,CACCC,IADD,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EAECF,IAFD,CAEMG,IAAI,IAAIN,YAAY,CAACM,IAAI,CAACC,OAAN,CAF1B,EAGCC,KAHD,CAGOC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAHd;AAIH,GALD;;AAOA,QAAMG,cAAc,GAAIC,MAAD,IAAY;AAC/B,QAAIC,MAAM,CAACC,OAAP,CAAe,0CAAf,CAAJ,EAAgE;AAC5Db,MAAAA,KAAK,CAACW,MAAM,CAACG,KAAP,CAAa,CAAb,EAAgBC,IAAjB,EAAuB;AACxBC,QAAAA,MAAM,EAAE;AADgB,OAAvB,CAAL,CAGCf,IAHD,CAGOgB,CAAC,IAAIjB,KAAK,CAACW,MAAM,CAACG,KAAP,CAAa,CAAb,EAAgBC,IAAjB,EAAuB;AACpCC,QAAAA,MAAM,EAAE;AAD4B,OAAvB,CAHjB,EAMCf,IAND,CAMOgB,CAAC,IAAIlB,YAAY,EANxB,EAOCO,KAPD,CAOOC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAPd;AAQH;AACJ,GAXD;;AAaA,QAAMW,WAAW,GAAIC,WAAD,IAAiB;AACjCnB,IAAAA,KAAK,CAAC,kDAAD,EAAqD;AACtDgB,MAAAA,MAAM,EAAE,MAD8C;AAEtDI,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAF6C;AAKtDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,WAAf;AALgD,KAArD,CAAL,CAOClB,IAPD,CAOOC,QAAQ,IAAIH,YAAY,EAP/B,EAQCO,KARD,CAQQC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CARf;AASH,GAVD;;AAYA,QAAMiB,OAAO,GAAG,CACZ;AAACC,IAAAA,UAAU,EAAE,WAAb;AAA0BC,IAAAA,KAAK,EAAE,UAAjC;AAA6CC,IAAAA,QAAQ,EAAE,IAAvD;AAA6DC,IAAAA,MAAM,EAAE,IAArE;AAA2EC,IAAAA,iBAAiB,EAAE;AAA9F,GADY,EAEZ;AAACJ,IAAAA,UAAU,EAAE,YAAb;AAA2BC,IAAAA,KAAK,EAAE,WAAlC;AAA+CC,IAAAA,QAAQ,EAAE,IAAzD;AAA+DC,IAAAA,MAAM,EAAE,IAAvE;AAA6EC,IAAAA,iBAAiB,EAAE;AAAhG,GAFY,EAGZ;AAACJ,IAAAA,UAAU,EAAE,SAAb;AAAwBC,IAAAA,KAAK,EAAE,eAA/B;AAAgDC,IAAAA,QAAQ,EAAE,IAA1D;AAAgEC,IAAAA,MAAM,EAAE,IAAxE;AAA8EC,IAAAA,iBAAiB,EAAE;AAAjG,GAHY,EAIZ;AAACH,IAAAA,KAAK,EAAE,UAAR;AAAoBC,IAAAA,QAAQ,EAAE,IAA9B;AAAoCC,IAAAA,MAAM,EAAE,IAA5C;AAAkDC,IAAAA,iBAAiB,EAAE;AAArE,GAJY,EAKZ;AAACH,IAAAA,KAAK,EAAE,MAAR;AAAgBC,IAAAA,QAAQ,EAAE,IAA1B;AAAgCC,IAAAA,MAAM,EAAE,IAAxC;AAA8CC,IAAAA,iBAAiB,EAAE;AAAjE,GALY,EAMZ;AAACH,IAAAA,KAAK,EAAE,OAAR;AAAiBC,IAAAA,QAAQ,EAAE,IAA3B;AAAiCC,IAAAA,MAAM,EAAE,IAAzC;AAA+CC,IAAAA,iBAAiB,EAAE;AAAlE,GANY,EAOZ;AAACH,IAAAA,KAAK,EAAE,OAAR;AAAiBC,IAAAA,QAAQ,EAAE,IAA3B;AAAiCC,IAAAA,MAAM,EAAE,IAAzC;AAA+CC,IAAAA,iBAAiB,EAAE;AAAlE,GAPY,EAQZ;AACIJ,IAAAA,UAAU,EAAE,EADhB;AAEIC,IAAAA,KAAK,EAAE,OAFX;AAGII,IAAAA,KAAK,EAAE,EAHX;AAIID,IAAAA,iBAAiB,EAAE,IAJvB;AAKIE,IAAAA,qBAAqB,EAAEpB,MAAM,iBACzB,QAAC,UAAD;AAAY,MAAA,KAAK,EAAG,WAApB;AAAgC,MAAA,OAAO,EAAI,MAAMD,cAAc,CAACC,MAAD,CAA/D;AAAA,6BACI,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AANR,GARY,EAkBZ;AACIc,IAAAA,UAAU,EAAE,EADhB;AAEIC,IAAAA,KAAK,EAAE,MAFX;AAGII,IAAAA,KAAK,EAAE,EAHX;AAIID,IAAAA,iBAAiB,EAAE,IAJvB;AAKIE,IAAAA,qBAAqB,EAAEpB,MAAM,iBAAI,QAAC,WAAD;AAAa,MAAA,WAAW,EAAIqB,WAA5B;AAAyC,MAAA,MAAM,EAAIrB;AAAnD;AAAA;AAAA;AAAA;AAAA;AALrC,GAlBY,CAAhB;AA2BA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AAAa,MAAA,WAAW,EAAIO;AAA5B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAG,mBAAjB;AAAqC,MAAA,KAAK,EAAI;AAACe,QAAAA,MAAM,EAAE,GAAT;AAAcH,QAAAA,KAAK,EAAE,MAArB;AAA6BI,QAAAA,MAAM,EAAE;AAArC,OAA9C;AAAA,6BACI,QAAC,WAAD;AACI,QAAA,OAAO,EAAIrC,SADf;AAEI,QAAA,UAAU,EAAI2B,OAFlB;AAGI,QAAA,UAAU,EAAG,MAHjB;AAII,QAAA,kBAAkB,EAAG,IAJzB;AAKI,QAAA,SAAS,EAAG;AALhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAlFQ5B,S;;KAAAA,S;AAoFT,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nimport { IconButton } from '@material-ui/core'\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined'\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined'\r\nimport DirectionsRunOutlinedIcon from '@material-ui/icons/DirectionsRunOutlined' // for show trainings\r\n\r\nimport { AgGridReact } from 'ag-grid-react'\r\nimport 'ag-grid-community/dist/styles/ag-grid.css'\r\nimport 'ag-grid-community/dist/styles/ag-theme-material.css'\r\n\r\nimport AddCustomer from './AddCustomer'\r\nimport AddTraining from './AddTraining'\r\n\r\n\r\nfunction Customers() {\r\n    const [customers, setCustomers] = useState([])\r\n    \r\n    useEffect(() => {\r\n        getCustomers()\r\n    }, [])\r\n\r\n    const getCustomers = () => {\r\n        fetch('https://customerrest.herokuapp.com/api/customers')\r\n        .then (response => response.json())\r\n        .then(data => setCustomers(data.content))\r\n        .catch(err => console.error(err))\r\n    }\r\n\r\n    const deleteCustomer = (params) => {\r\n        if (window.confirm('Delete customer and all their trainings?')) {\r\n            fetch(params.value[0].href, {\r\n                method: 'DELETE'\r\n            })\r\n            .then (_ => fetch(params.value[2].href, {\r\n                method: 'DELETE'\r\n            }))\r\n            .then (_ => getCustomers())\r\n            .catch(err => console.error(err))\r\n        }\r\n    }\r\n\r\n    const addCustomer = (newCustomer) => {\r\n        fetch('https://customerrest.herokuapp.com/api/customers', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newCustomer)\r\n        })\r\n        .then (response => getCustomers())\r\n        .catch (err => console.error(err))\r\n    }\r\n\r\n    const columns = [\r\n        {headerName: 'Last name', field: 'lastname', sortable: true, filter: true, suppressSizeToFit: true},\r\n        {headerName: 'First Name', field: 'firstname', sortable: true, filter: true, suppressSizeToFit: true},\r\n        {headerName: 'Address', field: 'streetaddress', sortable: true, filter: true, suppressSizeToFit: true},\r\n        {field: 'postcode', sortable: true, filter: true, suppressSizeToFit: true},\r\n        {field: 'city', sortable: true, filter: true, suppressSizeToFit: true},\r\n        {field: 'email', sortable: true, filter: true, suppressSizeToFit: true},\r\n        {field: 'phone', sortable: true, filter: true, suppressSizeToFit: true},\r\n        {\r\n            headerName: '',\r\n            field: 'links',\r\n            width: 80,\r\n            suppressSizeToFit: true,\r\n            cellRendererFramework: params =>\r\n                <IconButton color = 'secondary' onClick = {() => deleteCustomer(params)}>\r\n                    <DeleteOutlinedIcon />\r\n                </IconButton>\r\n        },\r\n        {\r\n            headerName: '',\r\n            field: 'data',\r\n            width: 80,\r\n            suppressSizeToFit: true,\r\n            cellRendererFramework: params => <AddTraining addTraining = {addTraining} params = {params} />\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n            <h1>Customers</h1>\r\n            <AddCustomer addCustomer = {addCustomer} />\r\n            <div className = 'ag-theme-material' style = {{height: 600, width: '100%', margin: 'auto'}}>\r\n                <AgGridReact\r\n                    rowData = {customers}\r\n                    columnDefs = {columns}\r\n                    pagination = 'true'\r\n                    paginationPageSize = '10'\r\n                    resizable = 'true'\r\n                    >\r\n                </AgGridReact>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Customers"]},"metadata":{},"sourceType":"module"}