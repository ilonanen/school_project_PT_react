{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ilona\\\\Documents\\\\React\\\\ptreact\\\\src\\\\components\\\\Calendar.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n\nfunction Calendar() {\n  _s();\n\n  const [trainings, setTrainings] = useState({});\n  useEffect(() => {\n    getTrainings();\n  }, []);\n\n  const getTrainings = () => {\n    fetch('https://customerrest.herokuapp.com/gettrainings').then(response => response.json()).then(data => setTrainings(data)).catch(err => console.error(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(FullCalendar, {\n    plugins: [dayGridPlugin],\n    initialView: \"dayGridMonth\",\n    events: [{\n      title: trainings.activity,\n      date: trainings.date\n    }]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Calendar, \"EUR4I7VoIUMJ4IWYztKNG1h0CYU=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["C:/Users/ilona/Documents/React/ptreact/src/components/Calendar.js"],"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","Calendar","trainings","setTrainings","getTrainings","fetch","then","response","json","data","catch","err","console","error","title","activity","date"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,YAAY,GAAG,MAAM;AACvBC,IAAAA,KAAK,CAAC,iDAAD,CAAL,CACCC,IADD,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EAECF,IAFD,CAEMG,IAAI,IAAIN,YAAY,CAACM,IAAD,CAF1B,EAGCC,KAHD,CAGOC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAHd;AAIH,GALD;;AAOA,sBACE,QAAC,YAAD;AACE,IAAA,OAAO,EAAI,CAAEX,aAAF,CADb;AAEE,IAAA,WAAW,EAAG,cAFhB;AAGE,IAAA,MAAM,EAAI,CACN;AACIc,MAAAA,KAAK,EAAEZ,SAAS,CAACa,QADrB;AAEIC,MAAAA,IAAI,EAAEd,SAAS,CAACc;AAFpB,KADM;AAHZ;AAAA;AAAA;AAAA;AAAA,UADF;AAYH;;GA1BQf,Q;;KAAAA,Q;AA4BT,eAAeA,QAAf","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\n\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\n\r\nfunction Calendar() {\r\n    const [trainings, setTrainings] = useState({})\r\n\r\n    useEffect(() => {\r\n        getTrainings()\r\n    }, [])\r\n\r\n    const getTrainings = () => {\r\n        fetch('https://customerrest.herokuapp.com/gettrainings')\r\n        .then (response => response.json())\r\n        .then(data => setTrainings(data))\r\n        .catch(err => console.error(err))\r\n    }\r\n\r\n    return (\r\n      <FullCalendar\r\n        plugins = {[ dayGridPlugin ]}\r\n        initialView = \"dayGridMonth\"\r\n        events = {[\r\n            {\r\n                title: trainings.activity,\r\n                date: trainings.date\r\n            }\r\n        ]}\r\n      />\r\n    )\r\n}\r\n\r\nexport default Calendar"]},"metadata":{},"sourceType":"module"}