{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ilona\\\\Documents\\\\React\\\\ptreact\\\\src\\\\components\\\\AddTraining.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { IconButton } from '@material-ui/core';\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\n\nfunction AddTraining(props, link) {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [training, setTraining] = useState({\n    date: new Date(),\n    activity: '',\n    duration: 0\n  });\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setCustomer({\n      date: new Date(),\n      activity: '',\n      duration: 0\n    });\n  };\n\n  const handleSave = () => {\n    props.addTraining(training);\n    handleClose();\n  };\n\n  const inputChanged = event => {\n    setTraining({ ...training,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      colot: \"default\",\n      onClick: handleClickOpen,\n      children: /*#__PURE__*/_jsxDEV(AddCircleOutlineOutlinedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"New training\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          type: \"date\",\n          label: \"Date\",\n          name: \"date\",\n          value: training.date,\n          onChange: inputChanged,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          type: \"text\",\n          label: \"Activity\",\n          name: \"activity\",\n          value: training.activity,\n          onChange: inputChanged,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          type: \"int\",\n          label: \"Duration\",\n          name: \"duration\",\n          value: training.duration,\n          onChange: inputChanged,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSave,\n          color: \"default\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddTraining, \"nQdeaxL6C+Mq5+s8ZNrMpyjYvlg=\");\n\n_c = AddTraining;\nexport default AddTraining;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTraining\");","map":{"version":3,"sources":["C:/Users/ilona/Documents/React/ptreact/src/components/AddTraining.js"],"names":["React","useState","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","IconButton","AddCircleOutlineOutlinedIcon","AddTraining","props","link","open","setOpen","training","setTraining","date","Date","activity","duration","handleClickOpen","handleClose","setCustomer","handleSave","addTraining","inputChanged","event","target","name","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport { IconButton } from '@material-ui/core'\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\n\r\n\r\nfunction AddTraining (props, link) {\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const [training, setTraining] = useState({\r\n        date: new(Date),\r\n        activity: '',\r\n        duration: 0,\r\n    })\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n        setCustomer({\r\n            date: new(Date),\r\n            activity: '',\r\n            duration: 0,\r\n        })\r\n    }\r\n\r\n    const handleSave = () => {\r\n        props.addTraining(training)\r\n        handleClose()\r\n    }\r\n\r\n    const inputChanged = (event) => {\r\n        setTraining({...training, [event.target.name]: event.target.value})\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <IconButton colot = 'default' onClick = {handleClickOpen}>\r\n                <AddCircleOutlineOutlinedIcon />\r\n            </IconButton>\r\n            <Dialog open = {open} onClose = {handleClose}>\r\n                <DialogTitle>New training</DialogTitle>\r\n                <DialogContent>\r\n                <TextField\r\n                    margin = \"dense\"\r\n                    type = 'date'\r\n                    label = \"Date\"\r\n                    name = 'date'\r\n                    value = {training.date}\r\n                    onChange = {inputChanged}\r\n                    fullWidth\r\n                />\r\n                <TextField\r\n                    margin = \"dense\"\r\n                    type = 'text'\r\n                    label = \"Activity\"\r\n                    name = 'activity'\r\n                    value = {training.activity}\r\n                    onChange = {inputChanged}\r\n                    fullWidth\r\n                />\r\n                <TextField\r\n                    margin = \"dense\"\r\n                    type = 'int'\r\n                    label = \"Duration\"\r\n                    name = 'duration'\r\n                    value = {training.duration}\r\n                    onChange = {inputChanged}\r\n                    fullWidth\r\n                />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                <Button onClick={handleSave} color=\"default\">\r\n                    Save\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTraining"]},"metadata":{},"sourceType":"module"}