{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ilona\\\\Documents\\\\React\\\\ptreact\\\\src\\\\components\\\\ShowTrainings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\nimport { IconButton } from '@material-ui/core';\nimport DirectionsRunOutlinedIcon from '@material-ui/icons/DirectionsRunOutlined';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport moment from 'moment';\n\nfunction ShowTrainings(props) {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [trainings, setTrainings] = useState([]);\n  const url = props.params.data.links[2].href;\n\n  const handleClickOpen = () => {\n    getTrainings();\n    console.log(trainings);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const getTrainings = () => {\n    fetch(url).then(response => response.json()).then(data => setTrainings(data.content)).catch(err => console.error(err));\n  };\n\n  const columns = [{\n    headerName: 'Date and time',\n    valueGetter: params => {\n      return moment(params.data.date).format(\"DD.MM.YYYY HH:mm\");\n    }\n  }, {\n    field: 'activity'\n  }, {\n    field: 'duration'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Show customer's trainings\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"default\",\n        \"aria-label\": \"show-trainings\",\n        onClick: handleClickOpen,\n        children: /*#__PURE__*/_jsxDEV(DirectionsRunOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: [\"Trainings for \", props.params.data.firstname, \" \", props.params.data.lastname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ag-theme-material\",\n          style: {\n            height: 200,\n            width: 200,\n            margin: 'auto'\n          },\n          children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n            rowData: trainings,\n            columnDefs: columns\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ShowTrainings, \"r+EVwOEBeJDL06uViK902K+nChI=\");\n\n_c = ShowTrainings;\nexport default ShowTrainings;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowTrainings\");","map":{"version":3,"sources":["C:/Users/ilona/Documents/React/ptreact/src/components/ShowTrainings.js"],"names":["React","useState","Button","Dialog","DialogActions","DialogContent","DialogTitle","AgGridReact","IconButton","DirectionsRunOutlinedIcon","Tooltip","moment","ShowTrainings","props","open","setOpen","trainings","setTrainings","url","params","data","links","href","handleClickOpen","getTrainings","console","log","handleClose","fetch","then","response","json","content","catch","err","error","columns","headerName","valueGetter","date","format","field","firstname","lastname","height","width","margin"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\n\r\nimport { AgGridReact } from 'ag-grid-react'\r\nimport 'ag-grid-community/dist/styles/ag-grid.css'\r\nimport 'ag-grid-community/dist/styles/ag-theme-material.css'\r\n\r\nimport { IconButton } from '@material-ui/core'\r\nimport DirectionsRunOutlinedIcon from '@material-ui/icons/DirectionsRunOutlined'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\nimport moment from 'moment'\r\n\r\nfunction ShowTrainings(props) {\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const [trainings, setTrainings] = useState([])\r\n\r\n    const url = props.params.data.links[2].href\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        getTrainings()\r\n        console.log(trainings)\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const getTrainings = () => {\r\n        fetch(url)\r\n        .then (response => response.json())\r\n        .then(data => setTrainings(data.content))\r\n        .catch(err => console.error(err))\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            headerName: 'Date and time',\r\n            valueGetter: params => {\r\n                return moment(params.data.date).format(\"DD.MM.YYYY HH:mm\")\r\n            }\r\n        },\r\n        {field: 'activity'},\r\n        {field: 'duration'}\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n            <Tooltip title = \"Show customer's trainings\">\r\n                <IconButton color = 'default' aria-label = 'show-trainings' onClick = {handleClickOpen}>\r\n                    <DirectionsRunOutlinedIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Dialog open = {open} onClose = {handleClose} fullWidth>\r\n                <DialogTitle>Trainings for {props.params.data.firstname} {props.params.data.lastname}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className = 'ag-theme-material' style = {{height: 200, width: 200, margin: 'auto'}}>\r\n                        <AgGridReact\r\n                            rowData = {trainings}\r\n                            columnDefs = {columns}>\r\n                        </AgGridReact>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    close\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowTrainings"]},"metadata":{},"sourceType":"module"}