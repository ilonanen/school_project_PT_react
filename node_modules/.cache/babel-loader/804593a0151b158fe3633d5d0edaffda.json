{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ilona\\\\Documents\\\\React\\\\ptreact\\\\src\\\\components\\\\trainings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\nimport moment from 'moment';\nimport { IconButton } from '@material-ui/core';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\n\nfunction Trainings() {\n  _s();\n\n  const [trainings, setTrainings] = useState([]);\n  useEffect(() => {\n    getTrainings();\n  }, []);\n\n  const getTrainings = () => {\n    fetch('https://customerrest.herokuapp.com/gettrainings').then(response => response.json()).then(data => setTrainings(data)).catch(err => console.error(err));\n  };\n\n  const deleteTraining = params => {\n    if (window.confirm('Delete training?')) {\n      var url = 'https://customerrest.herokuapp.com/api/trainings/' + params.value;\n      console.log(url);\n      fetch(url, {\n        method: 'DELETE'\n      }).then(_ => getTrainings()).catch(err => console.error(err));\n    }\n  };\n\n  const columns = [{\n    headerName: 'Date',\n    valueGetter: params => {\n      return moment(params.data.date).format(\"DD.MM.YYYY\");\n    },\n    suppressSizeToFit: true,\n    sortable: true,\n    filter: true\n  }, {\n    field: 'activity',\n    suppressSizeToFit: true,\n    sortable: true,\n    filter: true\n  }, {\n    field: 'duration',\n    suppressSizeToFit: true,\n    sortable: true,\n    filter: true\n  }, {\n    headerName: 'Customer',\n    valueGetter: params => {\n      return params.data.customer.lastname + ' ' + params.data.customer.firstname;\n    },\n    suppressSizeToFit: true,\n    sortable: true,\n    filter: true\n  }, {\n    headerName: '',\n    field: 'id',\n    suppressSizeToFit: true,\n    cellRendererFramework: params => /*#__PURE__*/_jsxDEV(IconButton, {\n      color: \"secondary\",\n      onClick: () => deleteTraining(params),\n      children: /*#__PURE__*/_jsxDEV(DeleteOutlinedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Trainings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ag-theme-material\",\n      style: {\n        height: 600,\n        width: '60%',\n        margin: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n        rowData: trainings,\n        columnDefs: columns,\n        pagination: \"true\",\n        paginationPageSize: \"10\",\n        resizable: \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Trainings, \"uabLU8KjmDYF8yoFx+QKK9rR174=\");\n\n_c = Trainings;\nexport default Trainings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Trainings\");","map":{"version":3,"sources":["C:/Users/ilona/Documents/React/ptreact/src/components/trainings.js"],"names":["React","useState","useEffect","AgGridReact","moment","IconButton","DeleteOutlinedIcon","Trainings","trainings","setTrainings","getTrainings","fetch","then","response","json","data","catch","err","console","error","deleteTraining","params","window","confirm","url","value","log","method","_","columns","headerName","valueGetter","date","format","suppressSizeToFit","sortable","filter","field","customer","lastname","firstname","cellRendererFramework","height","width","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nimport { AgGridReact } from 'ag-grid-react'\r\nimport 'ag-grid-community/dist/styles/ag-grid.css'\r\nimport 'ag-grid-community/dist/styles/ag-theme-material.css'\r\n\r\nimport moment from 'moment'\r\n\r\nimport { IconButton } from '@material-ui/core';\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined'\r\n\r\nfunction Trainings() {\r\n    const [trainings, setTrainings] = useState([])\r\n    \r\n    useEffect(() => {\r\n        getTrainings()\r\n    }, [])\r\n\r\n    const getTrainings = () => {\r\n        fetch('https://customerrest.herokuapp.com/gettrainings')\r\n        .then (response => response.json())\r\n        .then(data => setTrainings(data))\r\n        .catch(err => console.error(err))\r\n    }\r\n\r\n    const deleteTraining = (params) => {\r\n        if (window.confirm('Delete training?')) {\r\n            var url = 'https://customerrest.herokuapp.com/api/trainings/' + params.value\r\n            console.log(url)\r\n            fetch(url, {\r\n                method: 'DELETE'\r\n            })\r\n            .then (_ => getTrainings())\r\n            .catch(err => console.error(err))\r\n        }\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            headerName: 'Date',\r\n            valueGetter: params => {\r\n                return moment(params.data.date).format(\"DD.MM.YYYY\")\r\n            },\r\n            suppressSizeToFit: true,\r\n            sortable: true,\r\n            filter: true\r\n        },\r\n        {field: 'activity', suppressSizeToFit: true, sortable: true, filter: true},\r\n        {field: 'duration', suppressSizeToFit: true, sortable: true, filter: true},\r\n        {\r\n            headerName: 'Customer', \r\n            valueGetter: params => {\r\n                return params.data.customer.lastname + ' ' + params.data.customer.firstname\r\n            },\r\n            suppressSizeToFit: true,\r\n            sortable: true,\r\n            filter: true\r\n        },\r\n        {\r\n            headerName: '',\r\n            field: 'id',\r\n            suppressSizeToFit: true,\r\n            cellRendererFramework: params =>\r\n                <IconButton color = 'secondary' onClick = {() => deleteTraining(params)}>\r\n                    <DeleteOutlinedIcon />\r\n                </IconButton>\r\n        }\r\n        ]\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h1>Trainings</h1>\r\n            </div>\r\n            <div className = 'ag-theme-material' style = {{height: 600, width: '60%', margin: 'auto'}}>\r\n                <AgGridReact\r\n                    rowData = {trainings}\r\n                    columnDefs = {columns}\r\n                    pagination = 'true'\r\n                    paginationPageSize = '10'\r\n                    resizable = 'true'>\r\n                </AgGridReact>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Trainings"]},"metadata":{},"sourceType":"module"}